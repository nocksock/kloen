# .github/workflows/ci.yml
name: Test, Build & Publish

on:
  push:
    branches:
      - main

jobs:
  test-build-publish:
    runs-on: ubuntu-latest
    steps:
      - name: Cache tools
        id: cache-tools
        uses: actions/cache@v3
        with:
          path: /usr/local/bin/rg
          key: ${{ runner.os }}-tools-${{ hashFiles('**/tool-versions.txt') }}
          restore-keys: ${{ runner.os }}-tools-

      - name: Install ripgrep on Ubuntu
        if: steps.cache-tools.outputs.cache-hit != 'true'
        run: |
          sudo apt-get update
          sudo apt-get install -y ripgrep

      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - uses: pnpm/action-setup@v4
        name: Install pnpm
        with:
          version: 10.6.1
          run_install: false

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'

      - name: Install dependencies
        run: pnpm install

      - name: Run tests
        run: pnpm run test

      - name: Determine version bump
        id: version
        run: |
          COMMITS=$(git log $(git describe --tags --abbrev=0)..HEAD --oneline)
          type=$(echo "$COMMITS" | rg "^[\w\d]{4,12} (ci|fix|feat|docs|refactor|types):" -o -r '$1')
          case $type in
            ci|docs|chore)
              echo "bump=none" >> $GITHUB_OUTPUT
              ;;
            fix|refactor|types)
              echo "bump=patch" >> $GITHUB_OUTPUT
              ;;
            feat)
              echo "bump=minor" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "bump=none" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Bump version
        if: steps.version.outputs.bump != 'none'
        run: |
          git config --global user.email "github-actions@github.com"
          git config --global user.name "GitHub Actions"
          npm version ${{ steps.version.outputs.bump }} -m "Release %s"

      - name: Build
        run: pnpm run build

      - name: Publish to NPM
        if: steps.version.outputs.bump != 'none'
        run: pnpm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Push tags
        if: steps.version.outputs.bump != 'none'
        run: git push --follow-tags
